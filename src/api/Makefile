# Makefile.in generated by automake 1.16.3 from Makefile.am.
# src/api/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

MAKE=make

#
# Makefile for slurm API library



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/slurm
pkgincludedir = $(includedir)/slurm
pkglibdir = $(libdir)/slurm
pkglibexecdir = $(libexecdir)/slurm
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
noinst_PROGRAMS = libslurm.o$(EXEEXT)
subdir = src/api
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/auxdir/ax_check_compile_flag.m4 \
	$(top_srcdir)/auxdir/ax_check_zlib.m4 \
	$(top_srcdir)/auxdir/ax_gcc_builtin.m4 \
	$(top_srcdir)/auxdir/ax_lib_hdf5.m4 \
	$(top_srcdir)/auxdir/ax_pthread.m4 \
	$(top_srcdir)/auxdir/libtool.m4 \
	$(top_srcdir)/auxdir/ltoptions.m4 \
	$(top_srcdir)/auxdir/ltsugar.m4 \
	$(top_srcdir)/auxdir/ltversion.m4 \
	$(top_srcdir)/auxdir/lt~obsolete.m4 \
	$(top_srcdir)/auxdir/slurm.m4 \
	$(top_srcdir)/auxdir/slurmrestd.m4 \
	$(top_srcdir)/auxdir/x_ac_affinity.m4 \
	$(top_srcdir)/auxdir/x_ac_c99.m4 \
	$(top_srcdir)/auxdir/x_ac_cgroup.m4 \
	$(top_srcdir)/auxdir/x_ac_cray.m4 \
	$(top_srcdir)/auxdir/x_ac_curl.m4 \
	$(top_srcdir)/auxdir/x_ac_databases.m4 \
	$(top_srcdir)/auxdir/x_ac_debug.m4 \
	$(top_srcdir)/auxdir/x_ac_deprecated.m4 \
	$(top_srcdir)/auxdir/x_ac_dlfcn.m4 \
	$(top_srcdir)/auxdir/x_ac_env.m4 \
	$(top_srcdir)/auxdir/x_ac_freeipmi.m4 \
	$(top_srcdir)/auxdir/x_ac_http_parser.m4 \
	$(top_srcdir)/auxdir/x_ac_hwloc.m4 \
	$(top_srcdir)/auxdir/x_ac_json.m4 \
	$(top_srcdir)/auxdir/x_ac_jwt.m4 \
	$(top_srcdir)/auxdir/x_ac_lua.m4 \
	$(top_srcdir)/auxdir/x_ac_lz4.m4 \
	$(top_srcdir)/auxdir/x_ac_man2html.m4 \
	$(top_srcdir)/auxdir/x_ac_munge.m4 \
	$(top_srcdir)/auxdir/x_ac_netloc.m4 \
	$(top_srcdir)/auxdir/x_ac_nvml.m4 \
	$(top_srcdir)/auxdir/x_ac_ofed.m4 \
	$(top_srcdir)/auxdir/x_ac_pam.m4 \
	$(top_srcdir)/auxdir/x_ac_pmix.m4 \
	$(top_srcdir)/auxdir/x_ac_printf_null.m4 \
	$(top_srcdir)/auxdir/x_ac_ptrace.m4 \
	$(top_srcdir)/auxdir/x_ac_readline.m4 \
	$(top_srcdir)/auxdir/x_ac_rrdtool.m4 \
	$(top_srcdir)/auxdir/x_ac_rsmi.m4 \
	$(top_srcdir)/auxdir/x_ac_setproctitle.m4 \
	$(top_srcdir)/auxdir/x_ac_systemd.m4 \
	$(top_srcdir)/auxdir/x_ac_ucx.m4 \
	$(top_srcdir)/auxdir/x_ac_uid_gid_size.m4 \
	$(top_srcdir)/auxdir/x_ac_x11.m4 \
	$(top_srcdir)/auxdir/x_ac_yaml.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h $(top_builddir)/slurm/slurm.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
PROGRAMS = $(noinst_PROGRAMS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkglibdir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES) \
	$(pkglib_LTLIBRARIES)
libslurm_la_DEPENDENCIES = $(convenience_libs)
am_libslurm_la_OBJECTS =
libslurm_la_OBJECTS = $(am_libslurm_la_OBJECTS)
AM_V_lt = $(am__v_lt_1)
am__v_lt_ = $(am__v_lt_1)
am__v_lt_0 = --silent
am__v_lt_1 = 
libslurm_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libslurm_la_LDFLAGS) $(LDFLAGS) -o $@
libslurm_pmi_la_DEPENDENCIES = $(convenience_libs)
am_libslurm_pmi_la_OBJECTS =
libslurm_pmi_la_OBJECTS = $(am_libslurm_pmi_la_OBJECTS)
libslurm_pmi_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libslurm_pmi_la_LDFLAGS) $(LDFLAGS) \
	-o $@
libslurmfull_la_DEPENDENCIES = $(convenience_libs)
am_libslurmfull_la_OBJECTS =
libslurmfull_la_OBJECTS = $(am_libslurmfull_la_OBJECTS)
libslurmfull_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libslurmfull_la_LDFLAGS) $(LDFLAGS) \
	-o $@
am__DEPENDENCIES_1 = $(common_dir)/libcommon.la \
	$(common_dir)/libspank.la $(common_dir)/libeio.la
libslurmhelper_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__objects_1 = account_functions.lo archive_functions.lo \
	assoc_functions.lo cluster_functions.lo \
	cluster_report_functions.lo coord_functions.lo \
	connection_functions.lo extra_get_functions.lo \
	federation_functions.lo job_functions.lo \
	job_report_functions.lo qos_functions.lo resource_functions.lo \
	tres_functions.lo usage_functions.lo user_functions.lo \
	user_report_functions.lo wckey_functions.lo
am__objects_2 = allocate.lo allocate_msg.lo block_info.lo \
	burst_buffer_info.lo assoc_mgr_info.lo cancel.lo complete.lo \
	config_info.lo crontab.lo federation_info.lo front_end_info.lo \
	init.lo init_msg.lo job_info.lo job_step_info.lo \
	license_info.lo node_info.lo partition_info.lo pmi_server.lo \
	reservation_info.lo signal.lo slurm_get_statistics.lo \
	slurm_pmi.lo step_ctx.lo step_io.lo step_launch.lo submit.lo \
	suspend.lo token.lo topo_info.lo triggers.lo reconfigure.lo \
	update_config.lo $(am__objects_1)
am_libslurmhelper_la_OBJECTS = $(am__objects_2)
libslurmhelper_la_OBJECTS = $(am_libslurmhelper_la_OBJECTS)
libslurmhelper_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libslurmhelper_la_LDFLAGS) $(LDFLAGS) \
	-o $@
am_libslurm_o_OBJECTS =
libslurm_o_OBJECTS = $(am_libslurm_o_OBJECTS)
libslurm_o_DEPENDENCIES = $(top_builddir)/src/common/libeio.o \
	$(top_builddir)/src/common/libspank.o \
	$(top_builddir)/src/common/libcommon.o
AM_V_P = $(am__v_P_1)
am__v_P_ = $(am__v_P_1)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_1)
am__v_GEN_ = $(am__v_GEN_1)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_1)
am__v_at_ = $(am__v_at_1)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir) -I$(top_builddir)/slurm
depcomp = $(SHELL) $(top_srcdir)/auxdir/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/account_functions.Plo \
	./$(DEPDIR)/allocate.Plo ./$(DEPDIR)/allocate_msg.Plo \
	./$(DEPDIR)/archive_functions.Plo \
	./$(DEPDIR)/assoc_functions.Plo ./$(DEPDIR)/assoc_mgr_info.Plo \
	./$(DEPDIR)/block_info.Plo ./$(DEPDIR)/burst_buffer_info.Plo \
	./$(DEPDIR)/cancel.Plo ./$(DEPDIR)/cluster_functions.Plo \
	./$(DEPDIR)/cluster_report_functions.Plo \
	./$(DEPDIR)/complete.Plo ./$(DEPDIR)/config_info.Plo \
	./$(DEPDIR)/connection_functions.Plo \
	./$(DEPDIR)/coord_functions.Plo ./$(DEPDIR)/crontab.Plo \
	./$(DEPDIR)/extra_get_functions.Plo \
	./$(DEPDIR)/federation_functions.Plo \
	./$(DEPDIR)/federation_info.Plo ./$(DEPDIR)/front_end_info.Plo \
	./$(DEPDIR)/init.Plo ./$(DEPDIR)/init_msg.Plo \
	./$(DEPDIR)/job_functions.Plo ./$(DEPDIR)/job_info.Plo \
	./$(DEPDIR)/job_report_functions.Plo \
	./$(DEPDIR)/job_step_info.Plo ./$(DEPDIR)/license_info.Plo \
	./$(DEPDIR)/node_info.Plo ./$(DEPDIR)/partition_info.Plo \
	./$(DEPDIR)/pmi_server.Plo ./$(DEPDIR)/qos_functions.Plo \
	./$(DEPDIR)/reconfigure.Plo ./$(DEPDIR)/reservation_info.Plo \
	./$(DEPDIR)/resource_functions.Plo ./$(DEPDIR)/signal.Plo \
	./$(DEPDIR)/slurm_get_statistics.Plo ./$(DEPDIR)/slurm_pmi.Plo \
	./$(DEPDIR)/step_ctx.Plo ./$(DEPDIR)/step_io.Plo \
	./$(DEPDIR)/step_launch.Plo ./$(DEPDIR)/submit.Plo \
	./$(DEPDIR)/suspend.Plo ./$(DEPDIR)/token.Plo \
	./$(DEPDIR)/topo_info.Plo ./$(DEPDIR)/tres_functions.Plo \
	./$(DEPDIR)/triggers.Plo ./$(DEPDIR)/update_config.Plo \
	./$(DEPDIR)/usage_functions.Plo ./$(DEPDIR)/user_functions.Plo \
	./$(DEPDIR)/user_report_functions.Plo \
	./$(DEPDIR)/wckey_functions.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_1)
am__v_CC_ = $(am__v_CC_1)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_1)
am__v_CCLD_ = $(am__v_CCLD_1)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libslurm_la_SOURCES) $(libslurm_pmi_la_SOURCES) \
	$(libslurmfull_la_SOURCES) $(libslurmhelper_la_SOURCES) \
	$(libslurm_o_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
ACLOCAL = ${SHELL} '/home/daiyiqin1/Desktop/slurm-20.11.7/auxdir/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AR_FLAGS = cr
AUTOCONF = ${SHELL} '/home/daiyiqin1/Desktop/slurm-20.11.7/auxdir/missing' autoconf
AUTOHEADER = ${SHELL} '/home/daiyiqin1/Desktop/slurm-20.11.7/auxdir/missing' autoheader
AUTOMAKE = ${SHELL} '/home/daiyiqin1/Desktop/slurm-20.11.7/auxdir/missing' automake-1.16
AWK = mawk
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -g -O2 -fno-omit-frame-pointer -pthread -ggdb3 -Wall -g -O1 -fno-strict-aliasing
CHECK_CFLAGS = 
CHECK_LIBS = 
CPP = gcc -E
CPPFLAGS = 
CRAY_JOB_CPPFLAGS = 
CRAY_JOB_LDFLAGS = 
CRAY_SELECT_CPPFLAGS = 
CRAY_SELECT_LDFLAGS = 
CRAY_SWITCH_CPPFLAGS = 
CRAY_SWITCH_LDFLAGS = 
CRAY_TASK_CPPFLAGS = 
CRAY_TASK_LDFLAGS = 
CXX = g++
CXXCPP = 
CXXDEPMODE = depmode=none
CXXFLAGS = 
CYGPATH_W = echo
DATAWARP_CPPFLAGS = 
DATAWARP_LDFLAGS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DL_LIBS = -ldl
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
FREEIPMI_CPPFLAGS = 
FREEIPMI_LDFLAGS = 
FREEIPMI_LIBS = 
GLIB_CFLAGS = 
GLIB_COMPILE_RESOURCES = 
GLIB_GENMARSHAL = 
GLIB_LIBS = 
GLIB_MKENUMS = 
GOBJECT_QUERY = 
GREP = /usr/bin/grep
GTK_CFLAGS = 
GTK_LIBS = 
H5CC = 
H5FC = 
HAVEMYSQLCONFIG = no
HAVE_MAN2HTML = 
HDF5_CC = 
HDF5_CFLAGS = 
HDF5_CPPFLAGS = 
HDF5_FC = 
HDF5_FFLAGS = 
HDF5_FLIBS = 
HDF5_LDFLAGS = 
HDF5_LIBS = 
HDF5_TYPE = neither
HDF5_VERSION = 
HTTP_PARSER_CPPFLAGS = 
HTTP_PARSER_LDFLAGS = 
HWLOC_CPPFLAGS = 
HWLOC_LDFLAGS = 
HWLOC_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JSON_CPPFLAGS = 
JSON_LDFLAGS = 
JWT_CPPFLAGS = 
JWT_LDFLAGS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =  
LIBCURL = 
LIBCURL_CPPFLAGS = 
LIBOBJS = 
LIBS =  -lm -lresolv 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIB_SLURM = -Wl,-rpath=${exec_prefix}/lib/slurm -L$(top_builddir)/src/api/.libs -lslurmfull
LIB_SLURM_BUILD = $(top_builddir)/src/api/full_version.map $(top_builddir)/src/api/libslurmfull.la
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LZ4_CPPFLAGS = 
LZ4_LDFLAGS = 
LZ4_LIBS = 
MAINT = #
MAKEINFO = ${SHELL} '/home/daiyiqin1/Desktop/slurm-20.11.7/auxdir/missing' makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
MUNGE_CPPFLAGS = 
MUNGE_DIR = 
MUNGE_LDFLAGS = 
MUNGE_LIBS = 
MYSQL_CFLAGS = 
MYSQL_LIBS = 
NETLOC_CPPFLAGS = 
NETLOC_LDFLAGS = 
NETLOC_LIBS = 
NM = /usr/bin/nm -B
NMEDIT = 
NUMA_LIBS = 
NVML_CPPFLAGS = 
NVML_LIBS = 
OBJCOPY = objcopy
OBJDUMP = objdump
OBJEXT = o
OFED_CPPFLAGS = 
OFED_LDFLAGS = 
OFED_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = slurm
PACKAGE_BUGREPORT = 
PACKAGE_NAME = slurm
PACKAGE_STRING = slurm 20.11
PACKAGE_TARNAME = slurm
PACKAGE_URL = https://slurm.schedmd.com
PACKAGE_VERSION = 20.11
PAM_DIR = /lib/security
PAM_LIBS = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PMIX_V1_CPPFLAGS = 
PMIX_V1_LDFLAGS = 
PMIX_V2_CPPFLAGS = 
PMIX_V2_LDFLAGS = 
PMIX_V3_CPPFLAGS = 
PMIX_V3_LDFLAGS = 
PMIX_V4_CPPFLAGS = 
PMIX_V4_LDFLAGS = 
PROJECT = slurm
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
READLINE_LIBS = 
RELEASE = 1
RRDTOOL_CPPFLAGS = 
RRDTOOL_LDFLAGS = 
RRDTOOL_LIBS = 
RSMI_CPPFLAGS = 
RSMI_LDFLAGS = 
RSMI_LIBS = 
SED = /usr/bin/sed
SET_MAKE = MAKE=make
SHELL = /bin/bash
SLEEP_CMD = /usr/bin/sleep
SLURMCTLD_PORT = 
SLURMCTLD_PORT_COUNT = 
SLURMDBD_PORT = 
SLURMD_PORT = 
SLURMRESTD_PORT = 6820
SLURM_API_AGE = 0
SLURM_API_CURRENT = 36
SLURM_API_MAJOR = 36
SLURM_API_REVISION = 0
SLURM_API_VERSION = 0x240000
SLURM_MAJOR = 20
SLURM_MICRO = 7
SLURM_MINOR = 11
SLURM_PREFIX = 
SLURM_VERSION_NUMBER = 0x140b07
SLURM_VERSION_STRING = 20.11.7
STRIP = strip
SUCMD = /usr/bin/su
SYSTEMD_TASKSMAX_OPTION = TasksMax=infinity
UCX_CPPFLAGS = 
UCX_LDFLAGS = 
UCX_LIBS = 
UTIL_LIBS = -lutil
VERSION = 20.11
YAML_CPPFLAGS = 
YAML_LDFLAGS = 
ZLIB_CPPFLAGS = 
ZLIB_LDFLAGS = 
ZLIB_LIBS = 
_libcurl_config = 
abs_builddir = /home/daiyiqin1/Desktop/slurm-20.11.7/src/api
abs_srcdir = /home/daiyiqin1/Desktop/slurm-20.11.7/src/api
abs_top_builddir = /home/daiyiqin1/Desktop/slurm-20.11.7
abs_top_srcdir = /home/daiyiqin1/Desktop/slurm-20.11.7
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_have_man2html = no
am__include = #
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/daiyiqin1/Desktop/slurm-20.11.7/auxdir/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lua_CFLAGS = 
lua_LIBS = 
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local/slurm-plus
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /usr/local/slurm-plus/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AUTOMAKE_OPTIONS = foreign
AM_CPPFLAGS = -I$(top_srcdir)
VERSION_SCRIPT = \
	version.map

OTHER_FLAGS = \
	-Wl,--version-script=$(VERSION_SCRIPT)

FULL_VERSION_SCRIPT = \
	full_version.map

FULL_OTHER_FLAGS = \
	-Wl,--version-script=$(FULL_VERSION_SCRIPT)

SLURM_PMI_OTHER_FLAGS = \
	-Wl,--version-script=$(VERSION_SCRIPT)


# libslurm version information :
#
# Update META file information before a public release only!
#
# Note that libtool builds libslurm.so.<major>.<age>.<rev>
# where major = API_MAJOR = (API_CURRENT - API_AGE)
# and   age   = API_AGE
# and   rev   = API_REVISION
#
# The following examples are based upon initial values of API_CURRENT = 6,
# API_AGE = 4, API_REVISION = 6.
#
# If any interfaces have been added: increment API_CURRENT, increment API_AGE,
# and set API_REVISION = 0 (e.g. libslurm.so.2.4.6 -> libslurm.so.2.5.0)
#
# If any interfaces have been removed: increment API_CURRENT, set API_AGE = 0,
# and set API_REVISION = 0 (e.g. libslurm.so.2.4.6 -> libslurm.so.7.0.0)
#
# If any interfaces have changed: increment API_CURRENT only
# (e.g. libslurm.so.2.4.6 -> libslurm.so.3.4.6)
#
# If the interfaces have not changed, but underlying code has changed at all:
# increment API_REVISION only (e.g. libslurm.so.2.4.6 -> libslurm.so.2.4.7)
#
current = $(SLURM_API_CURRENT)
age = $(SLURM_API_AGE)
rev = $(SLURM_API_REVISION)
lib_LTLIBRARIES = libslurm.la

# The ABI of libslurmfull can easily change from 1 micro version to another.
# To avoid issue we will install this lib alongside the plugins to protect
# from version issues.
#
# The unversioned libslurm_pmi is hidden there as well.
pkglib_LTLIBRARIES = libslurmfull.la libslurm_pmi.la

# BUILT_SOURCES tells automake that when "make" is called, these targets
# need to be built before anything else.
BUILT_SOURCES = $(VERSION_SCRIPT) $(FULL_VERSION_SCRIPT)\
		$(SLURM_PMI_VERSION_SCRIPT) libslurm.la


# Note that libslurmhelper is mostly the same as libslurm, except that
# it exports ALL symbols used by the process, libcommon, libeio, etc.
# Only link with libslurmhelper if you are sure you are not going to be
# loading a plugin that could use something you yourself are not
# calling from here.
# libslurm.o only contains all the api symbols and will export
# them to plugins that are loaded.
# Also, libslurmhelper, libslurm.o are for convenience, they are not installed.
noinst_LTLIBRARIES = libslurmhelper.la
slurmdbapi_src = \
	account_functions.c \
	archive_functions.c \
	assoc_functions.c \
	cluster_functions.c \
	cluster_report_functions.c \
	coord_functions.c \
	connection_functions.c \
	extra_get_functions.c \
	federation_functions.c \
	job_functions.c \
	job_report_functions.c \
	qos_functions.c \
	resource_functions.c \
	tres_functions.c \
	usage_functions.c \
	user_functions.c \
	user_report_functions.c \
	wckey_functions.c

slurmapi_src = \
	allocate.c       \
	allocate_msg.c   \
	block_info.c     \
	burst_buffer_info.c \
	assoc_mgr_info.c    \
	cancel.c         \
	complete.c       \
	config_info.c    \
	crontab.c        \
	federation_info.c \
	front_end_info.c \
	init.c           \
	init_msg.c       \
	job_info.c       \
	job_step_info.c  \
	license_info.c   \
	node_info.c      \
	partition_info.c \
	pmi_server.c     \
	pmi_server.h     \
	reservation_info.c \
	signal.c         \
	slurm_get_statistics.c \
	slurm_pmi.c      \
	slurm_pmi.h	 \
	step_ctx.c       \
	step_ctx.h       \
	step_io.c        \
	step_io.h        \
	step_launch.c    \
	step_launch.h    \
	submit.c         \
	suspend.c        \
	token.c          \
	topo_info.c      \
	triggers.c       \
	reconfigure.c    \
	update_config.c \
	$(slurmdbapi_src)

common_dir = $(top_builddir)/src/common
slurmapi_add = \
	$(common_dir)/libcommon.la	\
	$(common_dir)/libspank.la      	\
	$(common_dir)/libeio.la		\
	-lpthread

libslurmhelper_la_SOURCES = $(slurmapi_src)
libslurmhelper_la_LIBADD = $(slurmapi_add)
libslurmhelper_la_LDFLAGS = $(LIB_LDFLAGS)
convenience_libs = \
	$(top_builddir)/src/api/libslurmhelper.la

libslurm_la_SOURCES = 
libslurm_la_LIBADD = $(convenience_libs)
libslurm_la_LDFLAGS = \
        $(LIB_LDFLAGS) \
        -version-info $(current):$(rev):$(age) \
        $(OTHER_FLAGS)

libslurmfull_la_SOURCES = 
libslurmfull_la_LIBADD = $(convenience_libs)
libslurmfull_la_LDFLAGS = \
        $(LIB_LDFLAGS) \
	-avoid-version \
        $(FULL_OTHER_FLAGS)

libslurm_pmi_la_SOURCES = 
libslurm_pmi_la_LIBADD = $(convenience_libs)
libslurm_pmi_la_LDFLAGS = \
        $(LIB_LDFLAGS) \
	-avoid-version \
        $(SLURM_PMI_OTHER_FLAGS)


# This was made so we could export all symbols from libcommon
# on multiple platforms
libslurm_o_SOURCES = 
libslurm_o_LDADD = $(top_builddir)/src/common/libeio.o	\
	$(top_builddir)/src/common/libspank.o	\
	$(top_builddir)/src/common/libcommon.o

CLEANFILES = \
	$(VERSION_SCRIPT) $(FULL_VERSION_SCRIPT) $(SLURM_PMI_VERSION_SCRIPT)

DISTCLEANFILES = \
	$(VERSION_SCRIPT) $(FULL_VERSION_SCRIPT) $(SLURM_PMI_VERSION_SCRIPT)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/api/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/api/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkglibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkglibdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pkglibdir)"; \
	}

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libslurm.la: $(libslurm_la_OBJECTS) $(libslurm_la_DEPENDENCIES) $(EXTRA_libslurm_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libslurm_la_LINK) -rpath $(libdir) $(libslurm_la_OBJECTS) $(libslurm_la_LIBADD) $(LIBS)

libslurm_pmi.la: $(libslurm_pmi_la_OBJECTS) $(libslurm_pmi_la_DEPENDENCIES) $(EXTRA_libslurm_pmi_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libslurm_pmi_la_LINK) -rpath $(pkglibdir) $(libslurm_pmi_la_OBJECTS) $(libslurm_pmi_la_LIBADD) $(LIBS)

libslurmfull.la: $(libslurmfull_la_OBJECTS) $(libslurmfull_la_DEPENDENCIES) $(EXTRA_libslurmfull_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libslurmfull_la_LINK) -rpath $(pkglibdir) $(libslurmfull_la_OBJECTS) $(libslurmfull_la_LIBADD) $(LIBS)

libslurmhelper.la: $(libslurmhelper_la_OBJECTS) $(libslurmhelper_la_DEPENDENCIES) $(EXTRA_libslurmhelper_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libslurmhelper_la_LINK)  $(libslurmhelper_la_OBJECTS) $(libslurmhelper_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

# ./$(DEPDIR)/account_functions.Plo # am--include-marker
# ./$(DEPDIR)/allocate.Plo # am--include-marker
# ./$(DEPDIR)/allocate_msg.Plo # am--include-marker
# ./$(DEPDIR)/archive_functions.Plo # am--include-marker
# ./$(DEPDIR)/assoc_functions.Plo # am--include-marker
# ./$(DEPDIR)/assoc_mgr_info.Plo # am--include-marker
# ./$(DEPDIR)/block_info.Plo # am--include-marker
# ./$(DEPDIR)/burst_buffer_info.Plo # am--include-marker
# ./$(DEPDIR)/cancel.Plo # am--include-marker
# ./$(DEPDIR)/cluster_functions.Plo # am--include-marker
# ./$(DEPDIR)/cluster_report_functions.Plo # am--include-marker
# ./$(DEPDIR)/complete.Plo # am--include-marker
# ./$(DEPDIR)/config_info.Plo # am--include-marker
# ./$(DEPDIR)/connection_functions.Plo # am--include-marker
# ./$(DEPDIR)/coord_functions.Plo # am--include-marker
# ./$(DEPDIR)/crontab.Plo # am--include-marker
# ./$(DEPDIR)/extra_get_functions.Plo # am--include-marker
# ./$(DEPDIR)/federation_functions.Plo # am--include-marker
# ./$(DEPDIR)/federation_info.Plo # am--include-marker
# ./$(DEPDIR)/front_end_info.Plo # am--include-marker
# ./$(DEPDIR)/init.Plo # am--include-marker
# ./$(DEPDIR)/init_msg.Plo # am--include-marker
# ./$(DEPDIR)/job_functions.Plo # am--include-marker
# ./$(DEPDIR)/job_info.Plo # am--include-marker
# ./$(DEPDIR)/job_report_functions.Plo # am--include-marker
# ./$(DEPDIR)/job_step_info.Plo # am--include-marker
# ./$(DEPDIR)/license_info.Plo # am--include-marker
# ./$(DEPDIR)/node_info.Plo # am--include-marker
# ./$(DEPDIR)/partition_info.Plo # am--include-marker
# ./$(DEPDIR)/pmi_server.Plo # am--include-marker
# ./$(DEPDIR)/qos_functions.Plo # am--include-marker
# ./$(DEPDIR)/reconfigure.Plo # am--include-marker
# ./$(DEPDIR)/reservation_info.Plo # am--include-marker
# ./$(DEPDIR)/resource_functions.Plo # am--include-marker
# ./$(DEPDIR)/signal.Plo # am--include-marker
# ./$(DEPDIR)/slurm_get_statistics.Plo # am--include-marker
# ./$(DEPDIR)/slurm_pmi.Plo # am--include-marker
# ./$(DEPDIR)/step_ctx.Plo # am--include-marker
# ./$(DEPDIR)/step_io.Plo # am--include-marker
# ./$(DEPDIR)/step_launch.Plo # am--include-marker
# ./$(DEPDIR)/submit.Plo # am--include-marker
# ./$(DEPDIR)/suspend.Plo # am--include-marker
# ./$(DEPDIR)/token.Plo # am--include-marker
# ./$(DEPDIR)/topo_info.Plo # am--include-marker
# ./$(DEPDIR)/tres_functions.Plo # am--include-marker
# ./$(DEPDIR)/triggers.Plo # am--include-marker
# ./$(DEPDIR)/update_config.Plo # am--include-marker
# ./$(DEPDIR)/usage_functions.Plo # am--include-marker
# ./$(DEPDIR)/user_functions.Plo # am--include-marker
# ./$(DEPDIR)/user_report_functions.Plo # am--include-marker
# ./$(DEPDIR)/wckey_functions.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
	$(AM_V_CC)source='$<' object='$@' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
	$(AM_V_CC)source='$<' object='$@' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
	$(AM_V_CC)source='$<' object='$@' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkglibdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	clean-pkglibLTLIBRARIES mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/account_functions.Plo
	-rm -f ./$(DEPDIR)/allocate.Plo
	-rm -f ./$(DEPDIR)/allocate_msg.Plo
	-rm -f ./$(DEPDIR)/archive_functions.Plo
	-rm -f ./$(DEPDIR)/assoc_functions.Plo
	-rm -f ./$(DEPDIR)/assoc_mgr_info.Plo
	-rm -f ./$(DEPDIR)/block_info.Plo
	-rm -f ./$(DEPDIR)/burst_buffer_info.Plo
	-rm -f ./$(DEPDIR)/cancel.Plo
	-rm -f ./$(DEPDIR)/cluster_functions.Plo
	-rm -f ./$(DEPDIR)/cluster_report_functions.Plo
	-rm -f ./$(DEPDIR)/complete.Plo
	-rm -f ./$(DEPDIR)/config_info.Plo
	-rm -f ./$(DEPDIR)/connection_functions.Plo
	-rm -f ./$(DEPDIR)/coord_functions.Plo
	-rm -f ./$(DEPDIR)/crontab.Plo
	-rm -f ./$(DEPDIR)/extra_get_functions.Plo
	-rm -f ./$(DEPDIR)/federation_functions.Plo
	-rm -f ./$(DEPDIR)/federation_info.Plo
	-rm -f ./$(DEPDIR)/front_end_info.Plo
	-rm -f ./$(DEPDIR)/init.Plo
	-rm -f ./$(DEPDIR)/init_msg.Plo
	-rm -f ./$(DEPDIR)/job_functions.Plo
	-rm -f ./$(DEPDIR)/job_info.Plo
	-rm -f ./$(DEPDIR)/job_report_functions.Plo
	-rm -f ./$(DEPDIR)/job_step_info.Plo
	-rm -f ./$(DEPDIR)/license_info.Plo
	-rm -f ./$(DEPDIR)/node_info.Plo
	-rm -f ./$(DEPDIR)/partition_info.Plo
	-rm -f ./$(DEPDIR)/pmi_server.Plo
	-rm -f ./$(DEPDIR)/qos_functions.Plo
	-rm -f ./$(DEPDIR)/reconfigure.Plo
	-rm -f ./$(DEPDIR)/reservation_info.Plo
	-rm -f ./$(DEPDIR)/resource_functions.Plo
	-rm -f ./$(DEPDIR)/signal.Plo
	-rm -f ./$(DEPDIR)/slurm_get_statistics.Plo
	-rm -f ./$(DEPDIR)/slurm_pmi.Plo
	-rm -f ./$(DEPDIR)/step_ctx.Plo
	-rm -f ./$(DEPDIR)/step_io.Plo
	-rm -f ./$(DEPDIR)/step_launch.Plo
	-rm -f ./$(DEPDIR)/submit.Plo
	-rm -f ./$(DEPDIR)/suspend.Plo
	-rm -f ./$(DEPDIR)/token.Plo
	-rm -f ./$(DEPDIR)/topo_info.Plo
	-rm -f ./$(DEPDIR)/tres_functions.Plo
	-rm -f ./$(DEPDIR)/triggers.Plo
	-rm -f ./$(DEPDIR)/update_config.Plo
	-rm -f ./$(DEPDIR)/usage_functions.Plo
	-rm -f ./$(DEPDIR)/user_functions.Plo
	-rm -f ./$(DEPDIR)/user_report_functions.Plo
	-rm -f ./$(DEPDIR)/wckey_functions.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES install-pkglibLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/account_functions.Plo
	-rm -f ./$(DEPDIR)/allocate.Plo
	-rm -f ./$(DEPDIR)/allocate_msg.Plo
	-rm -f ./$(DEPDIR)/archive_functions.Plo
	-rm -f ./$(DEPDIR)/assoc_functions.Plo
	-rm -f ./$(DEPDIR)/assoc_mgr_info.Plo
	-rm -f ./$(DEPDIR)/block_info.Plo
	-rm -f ./$(DEPDIR)/burst_buffer_info.Plo
	-rm -f ./$(DEPDIR)/cancel.Plo
	-rm -f ./$(DEPDIR)/cluster_functions.Plo
	-rm -f ./$(DEPDIR)/cluster_report_functions.Plo
	-rm -f ./$(DEPDIR)/complete.Plo
	-rm -f ./$(DEPDIR)/config_info.Plo
	-rm -f ./$(DEPDIR)/connection_functions.Plo
	-rm -f ./$(DEPDIR)/coord_functions.Plo
	-rm -f ./$(DEPDIR)/crontab.Plo
	-rm -f ./$(DEPDIR)/extra_get_functions.Plo
	-rm -f ./$(DEPDIR)/federation_functions.Plo
	-rm -f ./$(DEPDIR)/federation_info.Plo
	-rm -f ./$(DEPDIR)/front_end_info.Plo
	-rm -f ./$(DEPDIR)/init.Plo
	-rm -f ./$(DEPDIR)/init_msg.Plo
	-rm -f ./$(DEPDIR)/job_functions.Plo
	-rm -f ./$(DEPDIR)/job_info.Plo
	-rm -f ./$(DEPDIR)/job_report_functions.Plo
	-rm -f ./$(DEPDIR)/job_step_info.Plo
	-rm -f ./$(DEPDIR)/license_info.Plo
	-rm -f ./$(DEPDIR)/node_info.Plo
	-rm -f ./$(DEPDIR)/partition_info.Plo
	-rm -f ./$(DEPDIR)/pmi_server.Plo
	-rm -f ./$(DEPDIR)/qos_functions.Plo
	-rm -f ./$(DEPDIR)/reconfigure.Plo
	-rm -f ./$(DEPDIR)/reservation_info.Plo
	-rm -f ./$(DEPDIR)/resource_functions.Plo
	-rm -f ./$(DEPDIR)/signal.Plo
	-rm -f ./$(DEPDIR)/slurm_get_statistics.Plo
	-rm -f ./$(DEPDIR)/slurm_pmi.Plo
	-rm -f ./$(DEPDIR)/step_ctx.Plo
	-rm -f ./$(DEPDIR)/step_io.Plo
	-rm -f ./$(DEPDIR)/step_launch.Plo
	-rm -f ./$(DEPDIR)/submit.Plo
	-rm -f ./$(DEPDIR)/suspend.Plo
	-rm -f ./$(DEPDIR)/token.Plo
	-rm -f ./$(DEPDIR)/topo_info.Plo
	-rm -f ./$(DEPDIR)/tres_functions.Plo
	-rm -f ./$(DEPDIR)/triggers.Plo
	-rm -f ./$(DEPDIR)/update_config.Plo
	-rm -f ./$(DEPDIR)/usage_functions.Plo
	-rm -f ./$(DEPDIR)/user_functions.Plo
	-rm -f ./$(DEPDIR)/user_report_functions.Plo
	-rm -f ./$(DEPDIR)/wckey_functions.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-pkglibLTLIBRARIES

.MAKE: all check install install-am install-exec install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	clean-pkglibLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-pkglibLTLIBRARIES install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-libLTLIBRARIES uninstall-pkglibLTLIBRARIES

.PRECIOUS: Makefile


libslurm.o$(EXEEXT): $(libslurmhelper_la_OBJECTS) $(libslurm_o_LDADD)
	$(LINK) $(libslurmhelper_la_OBJECTS) $(libslurm_o_LDADD)

force:
$(libslurm_o_LDADD) $(convenience_libs) $(slurmapi_add) : force
	@cd `dirname $@` && $(MAKE) `basename $@`

# select/cray needs to load select/linear, thus plugin_context_ is required
$(VERSION_SCRIPT) :
	(echo "{ global:";   \
	 echo "   islurm_*;"; \
	 echo "   slurm_*;"; \
	 echo "   slurmdb_*;"; \
	 echo "   plugin_context_*;"; \
	 echo "   working_cluster_rec;"; \
	 echo "  local: *;"; \
	 echo "};") > $(VERSION_SCRIPT)

$(FULL_VERSION_SCRIPT) :
	(echo "{ global: *; };") > $(FULL_VERSION_SCRIPT)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
